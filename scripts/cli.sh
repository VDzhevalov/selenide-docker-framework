#!/bin/bash

set -e

COMMAND="$1"
ACTION="$2"
THIRD_ARG="$3"

PROJECT_ROOT="$(git rev-parse --show-toplevel 2>/dev/null || pwd)"
WEB_REPORT_TARGET_PATH="/app/build/allure-report"
TEST_REPORT_TARGET_PATH="/app/build/allure-report"

build_image() {
  COMPONENT="$1"
  DOCKERFILE_PATH="$PROJECT_ROOT/.docker/$COMPONENT/Dockerfile"
  EXPECTED_PATH="$PROJECT_ROOT/.docker/$COMPONENT"

  if [ ! -d "$EXPECTED_PATH" ] || [ ! -f "$DOCKERFILE_PATH" ]; then
    echo "‚ùå –û—á—ñ–∫—É—î—Ç—å—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: $EXPECTED_PATH/Dockerfile"
    echo "   –ê–ª–µ –≤–æ–Ω–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞. –ü–µ—Ä–µ–≤—ñ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç—É."
    exit 1
  fi

  IMAGE_NAME="selenide-${COMPONENT}-image"

  echo "üî® –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±—Ä–∞–∑ '$IMAGE_NAME' –∑ Dockerfile '$DOCKERFILE_PATH'"
  podman build -f "$DOCKERFILE_PATH" -t "$IMAGE_NAME" "$PROJECT_ROOT"
  echo "‚úÖ –û–±—Ä–∞–∑ –∑—ñ–±—Ä–∞–Ω–æ: $IMAGE_NAME"
}

run_web_server() {
  HOST_REPORT_PATH="$1"

  if [ -z "$HOST_REPORT_PATH" ]; then
    echo "‚ùå –í–∫–∞–∂–∏ —à–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏ –∑ Allure-—Ä–µ–ø–æ—Ä—Ç–æ–º. –ù–∞–ø—Ä–∏–∫–ª–∞–¥:"
    echo "   ./cli.sh web run ./build/reports/allure-report"
    exit 1
  fi

  if [ ! -d "$HOST_REPORT_PATH" ]; then
    echo "‚ùå –ü–∞–ø–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞: $HOST_REPORT_PATH"
    exit 1
  fi

CONT_NAME="selenide-${COMMAND}-server"

  echo "üöÄ –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤–µ–±—Å–µ—Ä–≤–µ—Ä $CONT_NAME –∑ —Ä–µ–ø–æ—Ä—Ç–∞–º–∏ –∑: $HOST_REPORT_PATH"
  podman run --rm --name "$CONT_NAME" -d -p 8080:8080 \
    -v "$HOST_REPORT_PATH":"$WEB_REPORT_TARGET_PATH":Z \
    selenide-web-image
}

run_tests_with_report_dir() {
  HOST_REPORT_PATH="$1"

  if [ -z "$HOST_REPORT_PATH" ]; then
    echo "‚ùå –í–∫–∞–∂–∏ —à–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏, –∫—É–¥–∏ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ Allure-—Ä–µ–ø–æ—Ä—Ç. –ù–∞–ø—Ä–∏–∫–ª–∞–¥:"
    echo "   ./cli.sh tests run ./build/reports/allure-report"
    exit 1
  fi

  if [ ! -d "$HOST_REPORT_PATH" ]; then
    echo "üìÇ –ü–∞–ø–∫–∞ –Ω–µ —ñ—Å–Ω—É—î. –°—Ç–≤–æ—Ä—é—é: $HOST_REPORT_PATH"
    mkdir -p "$HOST_REPORT_PATH"
  fi

  echo "üöÄ –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç–∏ –∑ –º–∞–ø—ñ–Ω–≥–æ–º —Ä–µ–ø–æ—Ä—Ç—ñ–≤ —É: $HOST_REPORT_PATH"
  podman run --rm \
    -v "$HOST_REPORT_PATH":"$TEST_REPORT_TARGET_PATH":Z \
    selenide-tests-image
}

case "$COMMAND" in
  web)
    case "$ACTION" in
      create)
        build_image web
        ;;
      run)
        run_web_server "$THIRD_ARG"
        ;;
      *)
        echo "‚ùì –ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è: $ACTION. –î–æ—Å—Ç—É–ø–Ω–æ: create, run"
        ;;
    esac
    ;;
  tests)
    case "$ACTION" in
      create)
        build_image tests
        ;;
      run)
        run_tests_with_report_dir "$THIRD_ARG"
        ;;
      *)
        echo "‚ùì –ù–µ–≤—ñ–¥–æ–º–∞ –¥—ñ—è: $ACTION. –î–æ—Å—Ç—É–ø–Ω–æ: create, run"
        ;;
    esac
    ;;
  *)
    echo "‚ùì –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞: $COMMAND. –î–æ—Å—Ç—É–ø–Ω–æ: tests, web"
    ;;
esac