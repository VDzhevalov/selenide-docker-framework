name: selenide-docker-framework CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 2 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

#      - name: Set up Podman
#        uses: redhat-actions/podman-install@v1
      - name: Install Podman manually
        run: |
          sudo apt-get update
          sudo apt-get -y install podman

      - name: Build container with Selenide tests
        run: podman build -t selenide-tests -f .docker/tests/Dockerfile .

      - name: Run container to execute tests and copy Allure report
        run: |
          podman run --name selenide-container selenide-tests
          mkdir -p ./build
          podman cp selenide-container:/app/build/allure-report ./build/
          podman rm selenide-container

      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: build/allure-report

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set date as env variable
        run: echo "REPORT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: public/reports/${{ env.REPORT_DATE }}

      - name: Move report files to correct location
        run: |
          for dir in public/reports/${{ env.REPORT_DATE }}/*/; do
            mv "$dir"* public/reports/${{ env.REPORT_DATE }}/
            rmdir "$dir" || true
          done

      - name: Generate redirect, index and changelog
        run: |
          echo '<meta http-equiv="refresh" content="0; url=reports/${{ env.REPORT_DATE }}/" />' > public/index.html
          mkdir -p public/reports
          echo '<html><body><h1>Allure Report History</h1><ul>' > public/reports/index.html
          for d in $(ls public/reports | sort); do
            if [ -d public/reports/$d ] && [ -f public/reports/$d/index.html ]; then
              echo "<li><a href='${d}/'>${d}</a></li>" >> public/reports/index.html
            fi
          done
          echo '</ul></body></html>' >> public/reports/index.html

          echo '<html><body><h1>Allure Changelog</h1><ul>' > public/changelog.html
          for d in $(ls public/reports | sort); do
            if [ -f public/reports/$d/widgets/summary.json ]; then
              passed=$(jq '.statistic.passed' public/reports/$d/widgets/summary.json)
              failed=$(jq '.statistic.failed' public/reports/$d/widgets/summary.json)
              echo "<li><strong>${d}:</strong> ✅ ${passed} passed, ❌ ${failed} failed — <a href='reports/${d}/'>View Report</a></li>" >> public/changelog.html
            fi
          done
          echo '</ul></body></html>' >> public/changelog.html

      - name: Publish Allure reports to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public